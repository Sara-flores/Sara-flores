{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyOGo5j56I6XyiwRlCwKETae",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Sara-flores/Sara-flores/blob/main/m%C3%A9todo%20de%20steffensen\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 5,
      "metadata": {
        "id": "f1ffMkppVPO6"
      },
      "outputs": [],
      "source": [
        "import math"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "#escribimos la función que vamos a ocupar\n",
        "def f(x):\n",
        "    return math.cos(x) - 2 * x + 3"
      ],
      "metadata": {
        "id": "oT86IxcXVPyG"
      },
      "execution_count": 6,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "#usamos el método de steffensen\n",
        "def steffensen_metodo(x0, tol, max_iter):\n",
        "    for i in range(max_iter):\n",
        "        fx0 = f(x0)\n",
        "        # Aplicamos el método de Steffensen\n",
        "        if fx0 == 0:\n",
        "            return x0  # Se encontró la raíz\n",
        "        x1 = x0 - fx0\n",
        "        fx1 = f(x1)\n",
        "\n",
        "        # Calculamos el siguiente valor de x usando la fórmula de Steffensen\n",
        "        if fx1 - fx0 == 0:\n",
        "            return None  # Previene división por cero\n",
        "        x2 = x1 - (fx1 * (x1 - x0)) / (fx1 - fx0)\n",
        "\n",
        "        # Verificamos la convergencia\n",
        "        if abs(x2 - x1) < tol:\n",
        "            return x2\n",
        "\n",
        "        # Actualizamos x0 para la siguiente iteración\n",
        "        x0 = x2\n",
        "\n",
        "    return None  # No se encontró una raíz\n",
        "\n",
        "# Parámetros iniciales\n",
        "x0 = 1.0      # Valor inicial\n",
        "tol = 1e-5    # Tolerancia\n",
        "max_iter = 1000  # Máximo de iteraciones\n",
        "\n",
        "raiz = steffensen_method(x0, tol, max_iter)\n",
        "\n",
        "if raiz is not None:\n",
        "    print(f\"La raíz encontrada es: {raiz}\")\n",
        "    print(f\"f(raíz) = {f(raiz)}\")\n",
        "else:\n",
        "    print(\"No se encontró una raíz con el método de Steffensen.\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "T14rYPJsVQBW",
        "outputId": "528ceb5a-c805-4705-f902-c145db09772d"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "La raíz encontrada es: 1.5235929330975162\n",
            "f(raíz) = -7.949196856316121e-14\n"
          ]
        }
      ]
    }
  ]
}